[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv-dynamic-versioning]
pattern = "default-unprefixed"

[project]
name = "pypitoken"
dynamic = ["version"]
description = "Manipulate PyPI API tokens"
authors = [{ name = "Joachim Jablon", email = "ewjoachim@gmail.com" }]
requires-python = ">=3.9"
readme = "README.rst"
license = "MIT"
keywords = ["pypi", "api", "token", "security", "packaging"]
classifiers = [
    "Topic :: Security",
    "Topic :: System :: Archiving :: Packaging",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
dependencies = ["pymacaroons>=0.13.0", "jsonschema", "typing-extensions"]

[project.urls]
Homepage = "https://pypitoken.readthedocs.io/en/latest/"
Repository = "https://github.com/ewjoachim/pypitoken"
Documentation = "https://pypitoken.readthedocs.io/en/latest/"

[dependency-groups]
docs = ["Sphinx", "furo", "sphinx-github-changelog"]
tests = ["pytest", "pytest-cov", "pytest-mock"]
dev = ["ruff", "pyright", "doc8"]

[tool.uv]
default-groups = ["docs", "tests", "dev"]

[tool.pyright]
exclude = ["tests", ".venv", "scripts", ".github"]

[tool.ruff]
target-version = "py39"
extend-exclude = [".venv"]

[tool.ruff.lint]
extend-select = [
    "UP",  # pyupgrade
    "I",   # isort
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "RUF", # ruff
]
fixable = ["ALL"]
extend-ignore = [
    "E501", # line too long
    # It's not exactly false but it's not supported enough by our dependencies,
    # so ruff is fighting with Pyright on this.
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.doc8]
max-line-length = 88
ignore-path = "docs/_build,.venv"

[tool.pytest.ini_options]
addopts = [
    "-vv",
    "--cov=pypitoken",
    "--strict-markers",
    "-rfE",
    "-m not benchmark",
]
testpaths = ["tests"]
filterwarnings = """
    error
"""
pythonpath = ["."]
